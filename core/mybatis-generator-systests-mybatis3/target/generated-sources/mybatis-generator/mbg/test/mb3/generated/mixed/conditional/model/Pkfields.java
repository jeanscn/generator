/*
 * This class was generated by MyBatis Generator Vgosoft Edition.
 * 生成时间: 2021-05-08 18:00
 */
package mbg.test.mb3.generated.mixed.conditional.model;

import com.vgosoft.core.annotation.ColumnMeta;
import com.vgosoft.core.annotation.TableMeta;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.JDBCType;
import java.util.Date;
import lombok.Getter;
import lombok.Setter;
import org.springframework.stereotype.Repository;

/**
 * 类对应的数据库表为： PKFIELDS
 */
@Repository
@TableMeta(value = "PKFields", descript = "", beanname = "pkfieldsImpl")
@ApiModel(value = "Pkfields", description = "")
@Setter
@Getter
public class Pkfields extends PkfieldsKey implements Serializable {
    private static final long serialVersionUID = 1L;

    /**
     */
    @ColumnMeta(value = "FIRSTNAME",description = "null",size =20,order = 21)
    @ApiModelProperty(value = "null",name = "FIRSTNAME")
    private String firstname;

    /**
     */
    @ColumnMeta(value = "LASTNAME",description = "null",size =20,order = 22)
    @ApiModelProperty(value = "null",name = "LASTNAME")
    private String lastname;

    /**
     */
    @ColumnMeta(value = "DATEFIELD",description = "null",size =10,order = 23,type = JDBCType.DATE,dataFormat ="yyyy-MM-dd")
    @ApiModelProperty(value = "null",name = "DATEFIELD")
    private Date datefield;

    /**
     */
    @ColumnMeta(value = "TIMEFIELD",description = "null",size =8,order = 24,type = JDBCType.TIME,dataFormat ="HH:mm:ss")
    @ApiModelProperty(value = "null",name = "TIMEFIELD")
    private Date timefield;

    /**
     */
    @ColumnMeta(value = "TIMESTAMPFIELD",description = "null",size =26,order = 25,type = JDBCType.TIMESTAMP,dataFormat ="yyyy-MM-dd HH:mm:ss")
    @ApiModelProperty(value = "null",name = "TIMESTAMPFIELD")
    private Date timestampfield;

    /**
     */
    @ColumnMeta(value = "DECIMAL30FIELD",description = "null",size =3,order = 26,type = JDBCType.DECIMAL)
    @ApiModelProperty(value = "null",name = "DECIMAL30FIELD")
    private Short decimal30field;

    /**
     */
    @ColumnMeta(value = "DECIMAL60FIELD",description = "null",size =6,order = 27,type = JDBCType.DECIMAL)
    @ApiModelProperty(value = "null",name = "DECIMAL60FIELD")
    private Integer decimal60field;

    /**
     */
    @ColumnMeta(value = "DECIMAL100FIELD",description = "null",size =10,order = 28,type = JDBCType.DECIMAL)
    @ApiModelProperty(value = "null",name = "DECIMAL100FIELD")
    private Long decimal100field;

    /**
     */
    @ColumnMeta(value = "DECIMAL155FIELD",description = "null",size =15,order = 29,type = JDBCType.DECIMAL)
    @ApiModelProperty(value = "null",name = "DECIMAL155FIELD")
    private BigDecimal decimal155field;

    /**
     */
    @ColumnMeta(value = "wierd$Field",description = "null",size =32,order = 30,type = JDBCType.INTEGER)
    @ApiModelProperty(value = "null",name = "wierd$Field")
    private Integer wierdField;

    /**
     */
    @ColumnMeta(value = "birth date",description = "null",size =10,order = 31,type = JDBCType.DATE,dataFormat ="yyyy-MM-dd")
    @ApiModelProperty(value = "null",name = "birth date")
    private Date birthDate;

    /**
     */
    @ColumnMeta(value = "STRINGBOOLEAN",description = "null",size =1,order = 32,type = JDBCType.CHAR)
    @ApiModelProperty(value = "null",name = "STRINGBOOLEAN")
    private String stringboolean;

    public Pkfields(Integer id2, Integer id1, String firstname, String lastname, Date datefield, Date timefield, Date timestampfield, Short decimal30field, Integer decimal60field, Long decimal100field, BigDecimal decimal155field, Integer wierdField, Date birthDate, String stringboolean) {
        super(id2, id1);
        this.firstname = firstname;
        this.lastname = lastname;
        this.datefield = datefield;
        this.timefield = timefield;
        this.timestampfield = timestampfield;
        this.decimal30field = decimal30field;
        this.decimal60field = decimal60field;
        this.decimal100field = decimal100field;
        this.decimal155field = decimal155field;
        this.wierdField = wierdField;
        this.birthDate = birthDate;
        this.stringboolean = stringboolean;
    }

    public Pkfields() {
        super();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        Pkfields other = (Pkfields) that;
        return (this.getId2() == null ? other.getId2() == null : this.getId2().equals(other.getId2()))
            && (this.getId1() == null ? other.getId1() == null : this.getId1().equals(other.getId1()))
            && (this.getFirstname() == null ? other.getFirstname() == null : this.getFirstname().equals(other.getFirstname()))
            && (this.getLastname() == null ? other.getLastname() == null : this.getLastname().equals(other.getLastname()))
            && (this.getDatefield() == null ? other.getDatefield() == null : this.getDatefield().equals(other.getDatefield()))
            && (this.getTimefield() == null ? other.getTimefield() == null : this.getTimefield().equals(other.getTimefield()))
            && (this.getTimestampfield() == null ? other.getTimestampfield() == null : this.getTimestampfield().equals(other.getTimestampfield()))
            && (this.getDecimal30field() == null ? other.getDecimal30field() == null : this.getDecimal30field().equals(other.getDecimal30field()))
            && (this.getDecimal60field() == null ? other.getDecimal60field() == null : this.getDecimal60field().equals(other.getDecimal60field()))
            && (this.getDecimal100field() == null ? other.getDecimal100field() == null : this.getDecimal100field().equals(other.getDecimal100field()))
            && (this.getDecimal155field() == null ? other.getDecimal155field() == null : this.getDecimal155field().equals(other.getDecimal155field()))
            && (this.getWierdField() == null ? other.getWierdField() == null : this.getWierdField().equals(other.getWierdField()))
            && (this.getBirthDate() == null ? other.getBirthDate() == null : this.getBirthDate().equals(other.getBirthDate()))
            && (this.getStringboolean() == null ? other.getStringboolean() == null : this.getStringboolean().equals(other.getStringboolean()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId2() == null) ? 0 : getId2().hashCode());
        result = prime * result + ((getId1() == null) ? 0 : getId1().hashCode());
        result = prime * result + ((getFirstname() == null) ? 0 : getFirstname().hashCode());
        result = prime * result + ((getLastname() == null) ? 0 : getLastname().hashCode());
        result = prime * result + ((getDatefield() == null) ? 0 : getDatefield().hashCode());
        result = prime * result + ((getTimefield() == null) ? 0 : getTimefield().hashCode());
        result = prime * result + ((getTimestampfield() == null) ? 0 : getTimestampfield().hashCode());
        result = prime * result + ((getDecimal30field() == null) ? 0 : getDecimal30field().hashCode());
        result = prime * result + ((getDecimal60field() == null) ? 0 : getDecimal60field().hashCode());
        result = prime * result + ((getDecimal100field() == null) ? 0 : getDecimal100field().hashCode());
        result = prime * result + ((getDecimal155field() == null) ? 0 : getDecimal155field().hashCode());
        result = prime * result + ((getWierdField() == null) ? 0 : getWierdField().hashCode());
        result = prime * result + ((getBirthDate() == null) ? 0 : getBirthDate().hashCode());
        result = prime * result + ((getStringboolean() == null) ? 0 : getStringboolean().hashCode());
        return result;
    }
}
/*
 * This class was generated by MyBatis Generator Vgosoft Edition.
 * 生成时间: 2021-05-08 18:00
 */
package mbg.test.mb3.generated.hierarchical.model;

import java.util.Arrays;

/**
 * 类对应的数据库表为： PKFIELDSBLOBS
 */
public class PkfieldsblobsWithBLOBs extends Pkfieldsblobs {
    /**
     */
    private byte[] blob1;

    public PkfieldsblobsWithBLOBs(Integer id1, Integer id2, String firstname, String lastname, byte[] blob1) {
        super(id1, id2, firstname, lastname);
        this.blob1 = blob1;
    }

    public PkfieldsblobsWithBLOBs() {
        super();
    }

    public byte[] getBlob1() {
        return blob1;
    }

    public void setBlob1(byte[] blob1) {
        this.blob1 = blob1;
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        PkfieldsblobsWithBLOBs other = (PkfieldsblobsWithBLOBs) that;
        return (this.getId1() == null ? other.getId1() == null : this.getId1().equals(other.getId1()))
            && (this.getId2() == null ? other.getId2() == null : this.getId2().equals(other.getId2()))
            && (this.getFirstname() == null ? other.getFirstname() == null : this.getFirstname().equals(other.getFirstname()))
            && (this.getLastname() == null ? other.getLastname() == null : this.getLastname().equals(other.getLastname()))
            && (Arrays.equals(this.getBlob1(), other.getBlob1()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId1() == null) ? 0 : getId1().hashCode());
        result = prime * result + ((getId2() == null) ? 0 : getId2().hashCode());
        result = prime * result + ((getFirstname() == null) ? 0 : getFirstname().hashCode());
        result = prime * result + ((getLastname() == null) ? 0 : getLastname().hashCode());
        result = prime * result + (Arrays.hashCode(getBlob1()));
        return result;
    }
}
/*
 * This class was generated by MyBatis Generator Vgosoft Edition.
 * 生成时间: 2021-05-08 18:00
 */
package mbg.test.mb3.generated.mixed.hierarchical.model;

import com.vgosoft.core.annotation.ColumnMeta;
import com.vgosoft.core.annotation.TableMeta;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.sql.JDBCType;
import java.util.Arrays;
import lombok.Getter;
import lombok.Setter;
import org.springframework.stereotype.Repository;

/**
 * 类对应的数据库表为： awful table
 */
@Repository
@TableMeta(value = "awful table", descript = "", beanname = "awfulTableImpl")
@ApiModel(value = "AwfulTable", description = "")
@Setter
@Getter
public class AwfulTable extends AwfulTableKey {
    private static final long serialVersionUID = 1L;

    /**
     */
    @ColumnMeta(value = "first name",description = "null",size =30,order = 20)
    @ApiModelProperty(value = "null",name = "first name")
    private String firstFirstName;

    /**
     */
    @ColumnMeta(value = "FIRST_NAME",description = "null",size =30,order = 21)
    @ApiModelProperty(value = "null",name = "FIRST_NAME")
    private String secondFirstName;

    /**
     */
    @ColumnMeta(value = "FIRSTNAME",description = "null",size =30,order = 22)
    @ApiModelProperty(value = "null",name = "FIRSTNAME")
    private String thirdFirstName;

    /**
     */
    @ColumnMeta(value = "last name",description = "null",size =30,order = 23)
    @ApiModelProperty(value = "null",name = "last name")
    private String lastName;

    /**
     */
    @ColumnMeta(value = "E_MAIL",description = "null",size =30,order = 24)
    @ApiModelProperty(value = "null",name = "E_MAIL")
    private String eMail;

    /**
     */
    @ColumnMeta(value = "_id1",description = "null",size =32,order = 25,type = JDBCType.INTEGER)
    @ApiModelProperty(value = "null",name = "_id1")
    private Integer id1;

    /**
     */
    @ColumnMeta(value = "$id2",description = "null",size =32,order = 26,type = JDBCType.INTEGER)
    @ApiModelProperty(value = "null",name = "$id2")
    private Integer id2;

    /**
     */
    @ColumnMeta(value = "id5_",description = "null",size =32,order = 27,type = JDBCType.INTEGER)
    @ApiModelProperty(value = "null",name = "id5_")
    private Integer id5;

    /**
     */
    @ColumnMeta(value = "id6$",description = "null",size =32,order = 28,type = JDBCType.INTEGER)
    @ApiModelProperty(value = "null",name = "id6$")
    private Integer id6;

    /**
     */
    @ColumnMeta(value = "id7$$",description = "null",size =32,order = 29,type = JDBCType.INTEGER)
    @ApiModelProperty(value = "null",name = "id7$$")
    private Integer id7;

    /**
     */
    @ColumnMeta(value = "EMAILADDRESS",description = "null",size =30,order = 30)
    @ApiModelProperty(value = "null",name = "EMAILADDRESS")
    private String emailaddress;

    /**
     */
    @ColumnMeta(value = "from",description = "null",size =30,order = 31)
    @ApiModelProperty(value = "null",name = "from")
    private String from;

    /**
     */
    @ColumnMeta(value = "ACTIVE",description = "null",size =1,order = 32,type = JDBCType.BIT)
    @ApiModelProperty(value = "null",name = "ACTIVE")
    private boolean active;

    /**
     */
    @ColumnMeta(value = "ACTIVE1",description = "null",size =0,order = 33,type = JDBCType.BOOLEAN)
    @ApiModelProperty(value = "null",name = "ACTIVE1")
    private Boolean active1;

    /**
     */
    @ColumnMeta(value = "ACTIVE2",description = "null",size =22,order = 34,type = JDBCType.BIT)
    @ApiModelProperty(value = "null",name = "ACTIVE2")
    private byte[] active2;

    /**
     */
    @ColumnMeta(value = "CLASS",description = "null",size =5,order = 35)
    @ApiModelProperty(value = "null",name = "CLASS")
    private String dbClass;

    public AwfulTable(Integer customerId, String firstFirstName, String secondFirstName, String thirdFirstName, String lastName, String eMail, Integer id1, Integer id2, Integer id5, Integer id6, Integer id7, String emailaddress, String from, boolean active, Boolean active1, byte[] active2, String dbClass) {
        super(customerId);
        this.firstFirstName = firstFirstName;
        this.secondFirstName = secondFirstName;
        this.thirdFirstName = thirdFirstName;
        this.lastName = lastName;
        this.eMail = eMail;
        this.id1 = id1;
        this.id2 = id2;
        this.id5 = id5;
        this.id6 = id6;
        this.id7 = id7;
        this.emailaddress = emailaddress;
        this.from = from;
        this.active = active;
        this.active1 = active1;
        this.active2 = active2;
        this.dbClass = dbClass;
    }

    public AwfulTable() {
        super();
    }

    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        AwfulTable other = (AwfulTable) that;
        return (this.getCustomerId() == null ? other.getCustomerId() == null : this.getCustomerId().equals(other.getCustomerId()))
            && (this.getFirstFirstName() == null ? other.getFirstFirstName() == null : this.getFirstFirstName().equals(other.getFirstFirstName()))
            && (this.getSecondFirstName() == null ? other.getSecondFirstName() == null : this.getSecondFirstName().equals(other.getSecondFirstName()))
            && (this.getThirdFirstName() == null ? other.getThirdFirstName() == null : this.getThirdFirstName().equals(other.getThirdFirstName()))
            && (this.getLastName() == null ? other.getLastName() == null : this.getLastName().equals(other.getLastName()))
            && (this.geteMail() == null ? other.geteMail() == null : this.geteMail().equals(other.geteMail()))
            && (this.getId1() == null ? other.getId1() == null : this.getId1().equals(other.getId1()))
            && (this.getId2() == null ? other.getId2() == null : this.getId2().equals(other.getId2()))
            && (this.getId5() == null ? other.getId5() == null : this.getId5().equals(other.getId5()))
            && (this.getId6() == null ? other.getId6() == null : this.getId6().equals(other.getId6()))
            && (this.getId7() == null ? other.getId7() == null : this.getId7().equals(other.getId7()))
            && (this.getEmailaddress() == null ? other.getEmailaddress() == null : this.getEmailaddress().equals(other.getEmailaddress()))
            && (this.getFrom() == null ? other.getFrom() == null : this.getFrom().equals(other.getFrom()))
            && (this.isActive() == other.isActive())
            && (this.getActive1() == null ? other.getActive1() == null : this.getActive1().equals(other.getActive1()))
            && (Arrays.equals(this.getActive2(), other.getActive2()))
            && (this.getDbClass() == null ? other.getDbClass() == null : this.getDbClass().equals(other.getDbClass()));
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getCustomerId() == null) ? 0 : getCustomerId().hashCode());
        result = prime * result + ((getFirstFirstName() == null) ? 0 : getFirstFirstName().hashCode());
        result = prime * result + ((getSecondFirstName() == null) ? 0 : getSecondFirstName().hashCode());
        result = prime * result + ((getThirdFirstName() == null) ? 0 : getThirdFirstName().hashCode());
        result = prime * result + ((getLastName() == null) ? 0 : getLastName().hashCode());
        result = prime * result + ((geteMail() == null) ? 0 : geteMail().hashCode());
        result = prime * result + ((getId1() == null) ? 0 : getId1().hashCode());
        result = prime * result + ((getId2() == null) ? 0 : getId2().hashCode());
        result = prime * result + ((getId5() == null) ? 0 : getId5().hashCode());
        result = prime * result + ((getId6() == null) ? 0 : getId6().hashCode());
        result = prime * result + ((getId7() == null) ? 0 : getId7().hashCode());
        result = prime * result + ((getEmailaddress() == null) ? 0 : getEmailaddress().hashCode());
        result = prime * result + ((getFrom() == null) ? 0 : getFrom().hashCode());
        result = prime * result + (isActive() ? 1231 : 1237);
        result = prime * result + ((getActive1() == null) ? 0 : getActive1().hashCode());
        result = prime * result + (Arrays.hashCode(getActive2()));
        result = prime * result + ((getDbClass() == null) ? 0 : getDbClass().hashCode());
        return result;
    }
}